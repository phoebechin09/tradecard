<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cards Page</title>
    <link href="https://css.gg/css" rel="stylesheet" />
    <script src="/js/uikit.min.js"></script>
    <link rel="stylesheet" href="/css/uikit.min.css">
    <script src="/js/uikit-icons.js"></script>
</head>

<body>


    <%- include('navbar') %>




        <div class="uk-card uk-card-default uk-card-body uk-margin-medium-bottom uk-flex">

            <div class="uk-margin uk-width-1-5 uk-align-left">
                <form class="uk-search uk-search-default">
                    <span uk-search-icon></span>
                    <input id="searchCardsKeyword" class="uk-search-input" type="search" placeholder="Search"
                        aria-label="Search">
                </form>
            </div>

            <div class="uk-inline uk-margin uk-align-left">
                <button class="uk-button uk-button-default" type="button">Filter</button>
                <div class="uk-dropbar uk-dropbar-top" uk-drop="stretch: x">Lorem ipsum dolor sit amet, consectetur
                    adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
                    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</div>
            </div>



            <div class="uk-margin uk-width-1-5 uk-align-left">
                <label class="uk-form-label" for="form-horizontal-select">Select</label>
                <div class="uk-form-controls">
                    <select class="uk-select" id="form-horizontal-select">
                        <option>Pokemon</option>
                        <option>Trainer</option>
                        <option>Energy</option>
                    </select>
                </div>
            </div>

        </div>


        <div class="">
            <div class="uk-margin uk-margin-large-left">
                <h6>Showing All <span id="cardLength"><%= cardData.length %></span> Card(s): </h6>
                <div id="errorMessage" class="uk-hidden">Error searching cards. Please try again later.</div>
            </div>

            <div class="uk-grid uk-margin-large-left uk-margin-large-right uk-child-width-expand">
                <ul class="uk-thumbnav uk-flex-center uk-child-width-1-5@m uk-child-width-1-3@s " uk-margin
                    id="cardList">

                    <% for (let i=0; i < 30 && i < cardData.length; i++) { %>
                        <% if (cardData[i].image) { %>
                            <li>
                                <a href="/cardinfo/<%= cardData[i].id %>" class="thumbNavi"
                                    data-card-name="<%= cardData[i].name %>">
                                    <img class="uk-border-rounded" src="<%= cardData[i].image %>/low.webp"
                                        alt="<%= cardData[i].name %> Image">
                                </a>
                            </li>
                            <% } else { %>
                                <div class="uk-card uk-card-default uk-card-hover uk-border-rounded uk-text-center"
                                    uk-height-match="target: .uk-thumbnav">
                                    <a class="uk-link-reset uk-text-small uk-text-muted uk-margin-medium-top"
                                        href="/cardinfo/<%= cardData[i].id %>"
                                        data-card-name="<%= cardData[i].name %>">no image üñºÔ∏è</a>
                                </div>

                                <% } %>
                                    <% } %>
                </ul>
            </div>

            <button id="loadMoreBtn"
                class="uk-button uk-button-large uk-button-secondary uk-margin-bottom uk-width-1-2 uk-margin-medium-top uk-align-center">Load
                More</button>
            <%- include('footer') %>
        </div>


        <!-- search cards by keyword -->


        <script>
            // Define a function to fetch search results from the server
            async function fetchSearchResults(searchQuery) {
                try {
                    const response = await fetch(`/searchCardsKeyword?q=${encodeURIComponent(searchQuery)}`);
                    if (response.ok) {
                        const searchData = await response.json();
                        return searchData;
                    } else {
                        console.error('Error searching cards:', response.statusText);
                        return null;
                    }
                } catch (error) {
                    console.error('Error searching cards:', error);
                    return null;
                }
            }

            // Define a function to append cards to the card list
            function appendCards(cards) {
                const cardList = document.getElementById('cardList');
                cards.forEach(card => {
                    if (card.image) {
                        const li = document.createElement('li');
                        const a = document.createElement('a');
                        const img = document.createElement('img');
                        img.setAttribute('class', 'uk-border-rounded');
                        img.src = card.image + '/low.webp';
                        img.alt = card.name + ' Image';
                        a.href = '/cardinfo/' + card.id; // Accessing card.id instead of cardData.id
                        
                        a.appendChild(img);
                        li.appendChild(a);
                        cardList.appendChild(li);
                    }
                });
                const cardLength = document.getElementById('cardLength');
                cardLength.textContent = cardList.children.length;

            }

            // Define a function to initialize event listeners
            function initializeEventListeners(initialCardData) {
                let currentCardData = initialCardData; // Track the current set of card data
                let startIndex = 30; // Initialize startIndex outside the event listener

                // Add event listener to the "load more" button
                document.getElementById('loadMoreBtn').addEventListener('click', async function () {
                    const currentCount = document.querySelectorAll('#cardList li').length;
                    const endIndex = startIndex + 30;
                    console.log('Current card data from load more:', currentCardData.length);
                    console.log('Current count:', currentCount);
                    if (startIndex >= currentCardData.length) {
                        console.log('All cards have been displayed.');
                        console.log('Search data:', currentCardData.length);
                        return;
                    }

                    const additionalCards = currentCardData.slice(startIndex, endIndex);
                    appendCards(additionalCards);
                    startIndex = endIndex; // Update startIndex for the next load more click
                });



                // Add event listener to the search input
                document.getElementById('searchCardsKeyword').addEventListener('keydown', async function (event) {
                    // Check if the Enter key (key code 13) was pressed
                    if (event.keyCode === 13) {
                        event.preventDefault(); // Prevent default form submission behavior

                        // Get the search query from the input field
                        const searchQuery = document.querySelector('#searchCardsKeyword').value.trim();

                        // Check if the search query is not empty
                        if (searchQuery !== '') {
                            // Fetch search results from the server
                            const searchData = await fetchSearchResults(searchQuery);

                            // Check if search results were successfully fetched
                            if (searchData) {
                                const cardList = document.getElementById('cardList');
                                cardList.innerHTML = ''; // Clear existing content
                                appendCards(searchData); // Append search results to the card list

                                // Update the current set of card data
                                currentCardData = searchData;
                                console.log('Current card data:', currentCardData.length);
                                console.log('Search data:', searchData.length);
                            } else {
                                displayErrorMessage(); // Display error message if search fails
                            }
                        } else {
                            alert('Please enter a search query.'); // Alert user if search query is empty
                        }
                    }
                });
            }

            // Fetch initial card data from the server
            async function fetchInitialCardData() {
                try {
                    const response = await fetch('/api/cardData');
                    if (response.ok) {
                        return await response.json();
                    } else {
                        console.error('Failed to fetch initial card data:', response.statusText);
                        return [];
                    }
                } catch (error) {
                    console.error('Error fetching initial card data:', error);
                    return [];
                }
            }

            // Initialize the page
            async function initializePage() {
                // Fetch initial card data from the server
                const initialCardData = await fetchInitialCardData();

                // Initialize event listeners with initial card data
                initializeEventListeners(initialCardData);
            }

            // Call initializePage when the window has loaded
            window.onload = function () {
                initializePage();
            };
        </script>




</body>

</html>