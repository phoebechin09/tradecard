<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cards Page</title>
    <link href="https://css.gg/css" rel="stylesheet" />
    <script src="/js/uikit.min.js"></script>
    <link rel="stylesheet" href="/css/uikit.min.css">
    <script src="/js/uikit-icons.js"></script>
</head>

<body>


    <%- include('navbar') %>




        <div class="uk-card uk-card-default uk-card-body uk-margin-medium-bottom uk-flex">

            <div class="uk-margin uk-width-1-5 uk-align-left">
                <form id="searchCardsKeyword" class="uk-search uk-search-default">
                    <span uk-search-icon></span>
                    <input class="uk-search-input" type="search" placeholder="Search" aria-label="Search">
                </form>
            </div>

            <div class="uk-inline uk-margin uk-align-left">
                <button class="uk-button uk-button-default" type="button">Filter</button>
                <div class="uk-dropbar uk-dropbar-top" uk-drop="stretch: x">Lorem ipsum dolor sit amet, consectetur
                    adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
                    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</div>
            </div>



            <div class="uk-margin uk-width-1-5 uk-align-left">
                <label class="uk-form-label" for="form-horizontal-select">Select</label>
                <div class="uk-form-controls">
                    <select class="uk-select" id="form-horizontal-select">
                        <option>Option 01</option>
                        <option>Option 02</option>
                    </select>
                </div>
            </div>

        </div>


        <div class="">
            <div class="uk-margin uk-margin-large-left">
                <h6>Showing <%= cardData.length %> Results for  ":</h6>
                <div id="errorMessage" class="uk-hidden">Error searching cards. Please try again later.</div>
            </div>

            <div class="uk-grid uk-margin-large-left uk-margin-large-right " uk-grid>
                <ul class="uk-thumbnav uk-flex-center uk-child-width-1-5@m uk-child-width-1-3@s" uk-margin
                    id="cardList">

                    <% for (let i=0; i < 30 && i < cardData.length; i++) { %>
                        <% if (cardData[i].image) { %>
                            <li>
                                <a href="/cardinfo/<%= cardData[i].id %>" class="thumbNavi">
                                    <img class="uk-border-rounded " src="<%= cardData[i].image %>/low.webp"
                                        alt="<%= cardData[i].name %> Image">
                                </a>
                            </li>
                            <% } else { %>
                                <div class="uk-card uk-card-default uk-card-hover uk-border-rounded uk-text-center"
                                    uk-height-match="target: .uk-thumbnav">
                                    <a class="uk-link-reset uk-text-small uk-text-muted uk-margin-medium-top"
                                        href="/cardinfo/<%= cardData[i].id %>">no image üñºÔ∏è</a>
                                </div>

                                <% } %>
                                    <% } %>
                </ul>
            </div>

            <button id="loadMoreBtn"
                class="uk-button uk-button-large uk-button-secondary uk-margin-bottom uk-width-1-2 uk-margin-medium-top uk-align-center"
                uk-margin>Load
                More</button>
            <%- include('footer') %>
        </div>


        <!-- search cards by keyword -->
        <script>
            async function handleSearch(event) {
                event.preventDefault();
                const searchQuery = document.querySelector('#searchCardsKeyword .uk-search-input').value.trim();
                console.log(searchQuery);
                if (searchQuery !== '') {
                    try {
                        const response = await fetch(`/searchCardsKeyword?q=${encodeURIComponent(searchQuery)}`);
                        if (response.ok) {
                            alert('Search completed successfully. Please wait while we load the results.');
                        } else {
                            console.error('Error searching cards:', response.statusText);
                            displayErrorMessage();
                        }
                    } catch (error) {
                        console.error('Error searching cards:', error);
                        displayErrorMessage();
                    }
                } else {
                    alert('Please enter a search query.');
                }
            }
            // Function to display error message
            function displayErrorMessage() {
                const errorMessage = document.getElementById('errorMessage');
                errorMessage.classList.remove('uk-hidden');
                setTimeout(() => {
                    errorMessage.classList.add('uk-hidden');
                }, 5000); // Hide the error message after 5 seconds
            }

            // Add event listener to the search form
            document.getElementById('searchCardsKeyword').addEventListener('submit', handleSearch);

        </script>



        <!-- to load more cards-->
        <script>
            // Fetch cardData from the server
            fetch('/api/cardData')
                .then(response => response.json())
                .then(cardData => {
                    const processCardData = (rows) => {
                        return rows.map(cardItem => ({
                            PKId: cardItem.card_PK_id,
                            id: cardItem.card_id,
                            localId: cardItem.local_id,
                            illustrator: cardItem.illustrator,
                            image: cardItem.image,
                            name: cardItem.name,
                            hp: cardItem.hp,
                            abilityType: cardItem.ability_type,
                            abilityName: cardItem.ability_name,
                            abilityEffect: cardItem.ability_effect,
                            evolveFom: cardItem.evolveFrom,
                            energyType: cardItem.energy_type,
                            rarity: cardItem.rarity,
                            stage: cardItem.stage,
                            setName: cardItem.card_set_name,
                            setPKId: cardItem.card_set_id,
                        }));
                    };

                    const allCardsData = processCardData(cardData);

                    document.getElementById('loadMoreBtn').addEventListener('click', function () {
                        const currentCount = document.querySelectorAll('#cardList li').length;
                        const startIndex = currentCount;
                        const endIndex = startIndex + 30;

                        if (startIndex >= allCardsData.length) {
                            console.log('All cards have been displayed.');
                            return;
                        }

                        const additionalCards = allCardsData.slice(startIndex, endIndex);

                        appendCards(additionalCards);
                    });

                    function appendCards(cards) {
                        const cardList = document.getElementById('cardList');
                        cards.forEach(card => {
                            if (card.image) {
                                const li = document.createElement('li');
                                const a = document.createElement('a');
                                const img = document.createElement('img');
                                img.src = card.image + '/low.webp';
                                img.alt = card.name + ' Image';
                                a.href = '/cardinfo/' + card.id; // Accessing card.id instead of cardData.id
                                a.appendChild(img);
                                li.appendChild(a);
                                cardList.appendChild(li);
                            }
                        });
                    }
                })
                .catch(error => {
                    console.error('Error fetching cardData:', error);
                });
        </script>

        <div id="error" class="uk-hidden">Error fetching card data</div>




</body>

</html>